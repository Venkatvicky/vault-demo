apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: postgres
spec:
  replicas: {{ .Values.postgres.replicas }}
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      serviceAccountName: postgres-sa
      automountServiceAccountToken: false
      containers:
      - name: postgres
        image: {{ .Values.postgres.image }}
        imagePullPolicy: Always
        env:
        - name: POSTGRES_USER
          value: {{ .Values.postgres.username }}
        - name: POSTGRES_PASSWORD
          value: {{ .Values.postgres.password }}
        - name: POSTGRES_DB
          value: {{ .Values.postgres.database }}
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-storage
          mountPath: /mnt/postgres-data  # Updated path here
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1"
        livenessProbe:
          httpGet:
            path: /health
            port: 5432
          initialDelaySeconds: 60   # Increased delay for database initialization
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /health
            port: 5432
          initialDelaySeconds: 60   # Increased delay for database initialization
          periodSeconds: 20
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc-new  # Make sure this matches your PVC definition
